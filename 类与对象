1.类与对象的关系：类是抽象的统称，对象是类的一个实例。对象的类型名就是类，比如：HelloWorld hello=new HelloWorld()
2.局部变量和成员变量的区别：成员变量可供所有方法使用，成员变量是在方法中定义，只能在本方法中使用。
  java会给成员变量赋予初始值，但是不会给局部变量赋值，因此局部变量需要初始化。
3.构造方法：与类名相同。语法：public 方法名(){
                                  代码
                                 }
           创建对象的同时会执行构造方法。
4.static静态变量：被 static 修饰的成员称为静态成员或类成员。它属于整个类所有，而不是某个对象所有，
                 即被类的所有对象所共享。静态成员可以使用类名直接访问，也可以使用对象名进行访问。
  static静态方法：与静态变量类似。
  注意点：(1)静态方法中可以直接调用同类中的静态成员，但不能直接调用非静态成员；(如果希望在静态方法中调用非静态变量，
             可以通过创建类的对象，然后通过对象来访问非静态变量)
          (2)在普通成员方法中，则可以直接访问同类的非静态变量和静态变量;
          (3)静态方法中不能直接调用非静态方法，需要通过对象来访问非静态方法。
  静态初始化块：在类的声明中，可以包含多个初始化块，当创建类的实例时，就会依次执行这些代码块。如果使用 static 修饰初
              始化块，就称为静态初始化块。
              注意：静态初始化块只在类加载时执行，且只会执行一次，同时静态初始化块只能给静态变量赋值，不能初始化普通的成员变量。
              语法结构：public class HelloWorld{
                             String name;
                             (static){
                                  name="tianqi";
                             }
                            }
               注意：程序运行时静态初始化块最先被执行，然后执行普通初始化块，最后才执行构造方法。
                     由于静态初始化块只在类加载时执行一次，所以当再次创建对象时并未执行静态初始化块。
